#!/usr/bin/python3
#+
# Aleqsei example: this is an adaptation of the Aqsis tutorial
# example “Your First Steps With Aqsis”
# <http://www.aqsis.org/documentation/tutorials/first_steps.html>.
# This is the third step, where the shader now defines a diffuse material.
#-

import sys
import os
import aleqsei

ctx = aleqsei.Context()
ctx.keep_temps = os.getenv("KEEP_AQSIS_TEMPS", "") != ""

(ctx.new_shader("simple_surface")
    .write
      (
        "// A very simple SL surface shader\n"
        "surface simple_surface() {\n"
        "  color Cd = noise(10*P);\n"
        "  Ci = Cd * diffuse(N);\n"
        "}\n"
      )
    .close()
)

ri = ctx.new_rib(display = aleqsei.DISPLAY.AUTO)
with ri.frame_context(1) :
    ri.format(640, 480, -1)
    ri.shading_rate(1)
    ri.projection("perspective", fov = [30])
    ri.frame_aspect_ratio(1.33)
    ri.identity()
    # Default distant headlight
    ri.light_source("distantlight", 1)
    # Camera transformation
    ri.translate(0, 0, 5)
    with ri.world_context() :
        ri.identity()
        with ri.attribute_context() :
            ri.colour(1, 0.6, 0) # A nice orange colour
            ri.surface("simple_surface")
            with ri.transform_context() :
                ri.rotate(90, 1, 0, 0) # Make +z point "up". The default camera coordinate system has
                ri.sphere(1, -1, 1, 360) # +y up, but the Sphere primitive has its poles on the z axis.
            #end with
        #end with
    #end with
#end with
ri.close()
sys.stderr.write("nr images = %d\n" % len(ctx.images))
out = open("%s.png" % os.path.basename(sys.argv[0]), "wb")
out.write(ctx.images[0])
out.close()
